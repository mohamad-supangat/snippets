{
  "Fungi submit": {
    "body": [
      "async function submit() {",
      "  loading.value.submit = true;",
      "  try {",
      "    const response = await api.post(route(\"$1\"), $2);",
      "    toast.request(response.status, response.message);",
      "    if (response.status) {",
      "      $3;",
      "    }",
      "  } finally {",
      "    loading.value.submit = false;",
      "  }",
      "}",
      ""
    ],
    "description": "Fungi submit",
    "prefix": "function-submit"
  },
  "column::datatable": {
    "body": [
      "{",
      "    name: \"${1}\",",
      "    label: \"${1}\",",
      "    field: \"${1}\",",
      "    align: \"left\",",
      "    sortable: true,",
      "},"
    ],
    "prefix": "column::datatable"
  },
  "columns::datatable": {
    "body": [
      "const columns = [",
      "    {",
      "        name: \"name\",",
      "        label: \"Nama\",",
      "        field: \"name\",",
      "        align: \"left\",",
      "        sortable: false,",
      "    },",
      "    {",
      "        name: \"description\",",
      "        label: \"Deskripsi\",",
      "        field: \"description\",",
      "        align: \"left\",",
      "        sortable: false,",
      "    },",
      "    {",
      "        name: \"enabled\",",
      "        label: \"Status\",",
      "        field: \"enabled\",",
      "        align: \"left\",",
      "        format: (x, y) => (x ? \"Aktiv\" : \"-\"),",
      "        sortable: false,",
      "    },",
      "    {",
      "        name: \"actions\",",
      "        label: \"Aksi\",",
      "        field: \"actions\",",
      "        align: \"left\",",
      "        sortable: false,",
      "    },",
      "];"
    ],
    "prefix": "columns::datatable"
  },
  "console.log": {
    "body": [
      "console.log(${0})"
    ],
    "description": "console.log",
    "prefix": "console"
  },
  "dialog-quasar": {
    "body": [
      "Dialog.create({",
      "\tcomponent: ${0},",
      "}).onOk(() => {",
      "\tdatatable.value.refresh();${1}",
      "});"
    ],
    "prefix": "dialog-quasar"
  },
  "form::ref": {
    "body": "const form = ref({})",
    "prefix": "form::ref"
  },
  "import-inertia": {
    "body": [
      "import { router } from '@inertiajs/vue3'"
    ],
    "description": "import inertia function",
    "prefix": "import-inertia"
  },
  "import-scripts-helper": {
    "body": [
      "import { api, toast } from \"@/scripts\";"
    ],
    "description": "Import base script helper (api, toast)",
    "prefix": "import-scripts-helper"
  },
  "import-vue": {
    "body": [
      "import { ref${0} } from 'vue';"
    ],
    "description": "import ref from vue",
    "prefix": "import-vue"
  },
  "importQuasar": {
    "body": [
      "import { Dialog } from \"quasar\";"
    ],
    "description": "import Dialog from quasar",
    "prefix": "import-quasar"
  },
  "loading:ref": {
    "body": "const loading = ref({ submit: false });",
    "prefix": "loading:ref"
  },
  "moment.js current date default format": {
    "body": [
      "moment().format('YYYY/MM/DD')"
    ],
    "description": "moment.js current date default format",
    "prefix": "moment-default-format"
  },
  "oapi:description": {
    "body": [
      "oapi.path({",
      "    description: 'Proses Login dan dapatkan sesi akun ',",
      "}),"
    ],
    "prefix": "oapi:description"
  },
  "oapi:openapi doc generator": {
    "body": [
      "oapi.path({",
      "  responses: {",
      "    200: {",
      "      description: 'Successful response',",
      "      content: {",
      "        'application/json': {",
      "          schema: {",
      "            type: 'object',",
      "            properties: {",
      "              ${1}: { type: 'string' }",
      "            }",
      "          }",
      "        }",
      "      }",
      "    }",
      "  }",
      "}"
    ],
    "prefix": "oapi:openapi doc generator"
  },
  "toast.response": {
    "body": "toast.response(response)",
    "prefix": "toast.response"
  },
  "useQuasar": {
    "body": [
      "import { useQuasar } from \"quasar\";",
      "const $q = useQuasar();"
    ],
    "description": "import and use useQuasar() function",
    "prefix": "useQuasar"
  }
}
